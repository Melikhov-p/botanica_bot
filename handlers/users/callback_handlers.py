import json
import re
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters import ChatTypeFilter
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

from keyboards.inline_keyboards import inline_main_menu
from loader import dp, bot, config
from aiogram import types


@dp.callback_query_handler(ChatTypeFilter(chat_type=types.ChatType.PRIVATE), lambda callback: callback.data == 'contacts')
async def process_callback_contacts(callback: types.CallbackQuery):
    await bot.send_message(callback.from_user.id, f"–°–ø–æ—Å–æ–±—ã —Å–≤—è–∑–∏:\n\n"
                                                  f"üìû <b>–¢–µ–ª–µ—Ñ–æ–Ω</b>: {config['contacts']['phone']}\n\n"
                                                  f"üìß <b>Email</b>: {config['contacts']['email']}\n\n"
                                                  f"üìç <b>–ê–¥—Ä–µ—Å</b>: {config['contacts']['address']}", parse_mode='html')


@dp.callback_query_handler(ChatTypeFilter(chat_type=types.ChatType.PRIVATE), lambda callback: callback.data == 'all_products')
async def process_callback_all_products(callback: types.CallbackQuery):
    await bot.send_message(callback.from_user.id, f"üå∑ –ú–∞–ª–µ–Ω—å–∫–∏–π –±—É–∫–µ—Ç - –¥–∞—Ä–æ–º \n\n"
                                                  f"üåπ –°—Ä–µ–¥–Ω–∏–π –±—É–∫–µ—Ç - –¥–æ–ø–ª–∞—Ç–∏–º —Å–∞–º–∏ \n\n"
                                                  f"üíê –ë–æ–ª—å—à–æ–π –±—É–∫–µ—Ç - –ó–∞–±–∏—Ä–∞–π—Ç–µ –≤–µ—Å—å –º–∞–≥–∞–∑–∏–Ω", parse_mode='html')


@dp.callback_query_handler(ChatTypeFilter(chat_type=types.ChatType.PRIVATE), lambda callback: callback.data == 'get_taxi')
async def process_callback_get_taxi(callback: types.CallbackQuery):
    await bot.send_message(callback.from_user.id, f"üöï –î–ª—è –≤—ã–∑–æ–≤–∞ —Ç–∞–∫—Å–∏ –Ω–∞–∂–º–∏—Ç–µ –ø–æ –∫–Ω–æ–ø–∫–µ –Ω–∏–∂–µ üöï ",
                           parse_mode='html',
                           reply_markup=InlineKeyboardMarkup().add(InlineKeyboardButton('–ü—Ä–æ–ª–æ–∂–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç', url=config['taxi_api_url'])))

